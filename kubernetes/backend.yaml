apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: ubereats
data:
  NODE_ENV: "production"
  MONGODB_URI: "mongodb://mongodb:27017/uber_eats"
  KAFKA_BROKER: "kafka-0.kafka.ubereats.svc.cluster.local:29092"
  FRONTEND_URL: "http://frontend"
---
apiVersion: v1
kind: Secret
metadata:
  name: backend-secrets
  namespace: ubereats
type: Opaque
data:
  SESSION_SECRET: bXlzZWNyZXRrZXk= # "mysecretkey" base64 encoded
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: ubereats
  labels:
    app: backend
spec:
  ports:
  - port: 3002
    targetPort: 3002
  selector:
    app: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: ubereats
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: ubereats-backend:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 3002
        envFrom:
        - configMapRef:
            name: backend-config
        - secretRef:
            name: backend-secrets
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /auth/health
            port: 3002
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: uploads-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: uploads-pvc
  namespace: ubereats
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi 