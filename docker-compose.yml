version: '3'

services:
  # MongoDB database
  mongo:
    image: mongo:latest
    container_name: ubereats-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - ubereats-network

  # Kafka for asynchronous messaging
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: ubereats-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ubereats-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ubereats-kafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - ubereats-network

  # Backend service
  backend:
    build: ./backend
    container_name: ubereats-backend
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - MONGODB_URI=mongodb+srv://BasanthPR:BasIta%4018@cluster0.scx53vu.mongodb.net/uber_eats_db?retryWrites=true&w=majority
      - KAFKA_BROKER=kafka:29092
      - SESSION_SECRET=mysecretkey
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - ubereats-network

  # Frontend service
  frontend:
    build: ./frontend
    container_name: ubereats-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - ubereats-network

networks:
  ubereats-network:
    driver: bridge

volumes:
  mongo-data: 